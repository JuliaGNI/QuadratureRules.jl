var documenterSearchIndex = {"docs":
[{"location":"library/","page":"Library","title":"Library","text":"CurrentModule = QuadratureRules","category":"page"},{"location":"library/#Quadrature-Rules-Library-Functions","page":"Library","title":"Quadrature Rules Library Functions","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [QuadratureRules]","category":"page"},{"location":"library/#QuadratureRules.QuadratureRule-Tuple{Function}","page":"Library","title":"QuadratureRules.QuadratureRule","text":"Integrate a function f(x) over the interval [0,1] using the quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.ClenshawCurtisQuadrature-Union{Tuple{T}, Tuple{Type{T},Integer}} where T","page":"Library","title":"QuadratureRules.ClenshawCurtisQuadrature","text":"Clenshaw-Curtis quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.GaussChebyshevQuadrature-Union{Tuple{T}, Tuple{Type{T},Integer}} where T","page":"Library","title":"QuadratureRules.GaussChebyshevQuadrature","text":"Gauss-Chebyshev quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.GaussLegendreQuadrature-Union{Tuple{T}, Tuple{Type{T},Integer}} where T","page":"Library","title":"QuadratureRules.GaussLegendreQuadrature","text":"Gauss-Legendre quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.LobattoChebyshevQuadrature-Union{Tuple{T}, Tuple{Type{T},Integer}} where T","page":"Library","title":"QuadratureRules.LobattoChebyshevQuadrature","text":"Lobatto-Chebyshev quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.LobattoLegendreQuadrature-Union{Tuple{T}, Tuple{Type{T},Integer}} where T","page":"Library","title":"QuadratureRules.LobattoLegendreQuadrature","text":"Lobatto-Legendre quadrature.\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.MidpointQuadrature","page":"Library","title":"QuadratureRules.MidpointQuadrature","text":"Midpoint quadrature.\n\n\n\n\n\n","category":"function"},{"location":"library/#QuadratureRules.RiemannQuadratureLeft","page":"Library","title":"QuadratureRules.RiemannQuadratureLeft","text":"Riemannian quadrature on the left.\n\n\n\n\n\n","category":"function"},{"location":"library/#QuadratureRules.RiemannQuadratureRight","page":"Library","title":"QuadratureRules.RiemannQuadratureRight","text":"Riemannian quadrature on the right.\n\n\n\n\n\n","category":"function"},{"location":"library/#QuadratureRules.TrapezoidalQuadrature","page":"Library","title":"QuadratureRules.TrapezoidalQuadrature","text":"Trapezoidal quadrature.\n\n\n\n\n\n","category":"function"},{"location":"library/#QuadratureRules.scale_weights-Tuple{Any}","page":"Library","title":"QuadratureRules.scale_weights","text":"Scale weights from the interval [-1,+1] to the interval [0,1].\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.shift!-Tuple{Any,Any}","page":"Library","title":"QuadratureRules.shift!","text":"Scale nodes and weights from the interval [-1,+1] to the interval [0,1].\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.shift_nodes-Tuple{Any}","page":"Library","title":"QuadratureRules.shift_nodes","text":"Shift and scale nodes from the interval [-1,+1] to the interval [0,1].\n\n\n\n\n\n","category":"method"},{"location":"library/#QuadratureRules.unshift!-Tuple{Any,Any}","page":"Library","title":"QuadratureRules.unshift!","text":"Scale nodes and weights from the interval [0,1] to the interval [-1,+1].\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuadratureRules","category":"page"},{"location":"#QuadratureRules","page":"Home","title":"QuadratureRules","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides quadrature rules for numerical integration, e.g., in finite element methods or variational integrators. It provides a unified interface for quadrature rules from different sources and algorithms for the computation of quadrature rules with an arbitrary number of nodes and weights in arbitrary precision.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"QuadratureRules.jl and all of its dependencies can be installed via the Julia REPL by typing ","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add QuadratureRules","category":"page"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"After loading the Quadrature Rule module by","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using QuadratureRules","category":"page"},{"location":"","page":"Home","title":"Home","text":"a QuadratureRule can be created by calling any one of the provided constructors, for example","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> quad = TrapezoidalQuadrature()\nQuadratureRule{Float64,2}(2, [0.0, 1.0], [0.5, 0.5])","category":"page"},{"location":"","page":"Home","title":"Home","text":"The QuadratureRule type has the following fields:","category":"page"},{"location":"","page":"Home","title":"Home","text":"order the order of the method,\nnodes the nodes,\nweights the weights.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A functor is defined, which integrates functions f(x) using the quadrature rule:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> quad(x -> x^2)\n0.5","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are several convenience functions for accessing the fields:","category":"page"},{"location":"","page":"Home","title":"Home","text":"nnodes(::QuadratureRule{T,N}) where {T,N} = N\nnodes(quad::QuadratureRule) = quad.nodes\norder(quad::QuadratureRule) = quad.order\nweights(quad::QuadratureRule) = quad.weights","category":"page"},{"location":"","page":"Home","title":"Home","text":"as well as a function for looping over all nodes and weights:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Base.eachindex(quad::QuadratureRule) = eachindex(quad.nodes, quad.weights)","category":"page"},{"location":"#Quadrature-Rules","page":"Home","title":"Quadrature Rules","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"There are several pre-tabulated quadrature rules:","category":"page"},{"location":"","page":"Home","title":"Home","text":"RiemannQuadratureLeft\nRiemannQuadratureRight\nMidpointQuadrature\nTrapezoidalQuadrature","category":"page"},{"location":"","page":"Home","title":"Home","text":"as well as functions for generating quadrature rules on the fly:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ClenshawCurtisQuadrature\nGaussChebyshevQuadrature\nGaussLegendreQuadrature\nLobattoChebyshevQuadrature\nLobattoLegendreQuadrature","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use QuadratureRules.jl in your work, please consider citing it by","category":"page"},{"location":"","page":"Home","title":"Home","text":"@misc{Kraus:2020:QuadratureRules,\n  title={QuadratureRules.jl: A Collection of Quadrature Rules in Julia},\n  author={Kraus, Michael},\n  year={2020},\n  howpublished={\\url{https://github.com/JuliaGNI/QuadratureRules.jl}},\n  doi={10.5281/zenodo.4310382}\n}","category":"page"}]
}
